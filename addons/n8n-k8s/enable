#!/usr/bin/env python3
# addons/n8n/enable

import subprocess
import click
from secrets import token_urlsafe
from base64 import b64encode

HELM = '/snap/bin/microk8s.helm3'
AD_NAME = 'n8n-k8s'
CHART_VERSION = '0.10.0'
ARGS_PATH = f'/var/snap/microk8s/current/args/{AD_NAME}'

VALUES_YAML_SOURCE = 'https://raw.githubusercontent.com/8gears/n8n-helm-chart/62276565dc78a505991bba6639e927bf9808745c/values.yaml'


def generate_key():
    return token_urlsafe(64)


def base64_encode(message_ascii: str):
    return b64encode(message_ascii.encode('ascii')).decode('ascii')


@click.command()
@click.option('--namespace', required=False, default='default', type=str)
def main(namespace):
    click.echo(f'Enabling {AD_NAME}')

    subprocess.check_call([
        'mkdir', '-p', ARGS_PATH
    ])

    # download values.yaml
    subprocess.check_call([
        'curl', '-L', VALUES_YAML_SOURCE, '-o', f'{ARGS_PATH}/values.yaml'
    ])

    # put encryption key in values.yaml
    subprocess.check_call([
        'sed', '-i', f's/encryption_key:/encryption_key: \'{base64_encode(generate_key())}\'/', f'{ARGS_PATH}/values.yaml'
    ])

    # add helm repo
    subprocess.check_call([
        HELM, 'repo', 'add', 'open-8gears', 'https://8gears.container-registry.com/chartrepo/library'
    ])

    # install
    subprocess.check_call([
        HELM, '-f', f'{ARGS_PATH}/values.yaml',
        'install', 'n8n', 'open-8gears/n8n',
        '--namespace', namespace,
        '--version', CHART_VERSION
    ])

    click.echo(f'Enabled {AD_NAME}')


if __name__ == '__main__':
    main()
